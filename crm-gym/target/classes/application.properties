spring.application.name=crm-gym
server.port=8080
spring.datasource.url=jdbc:postgresql://localhost:5432/crm_gym
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.profiles.active=dev
management.endpoints.web.exposure.include=health,prometheus
management.endpoint.prometheus.enabled=true
management.prometheus.metrics.export.enabled=true
management.endpoint.health.show-details=always
jwt.secret-key=wt9o1PLsOn103r58uf4wE6wI/IaWNtichVRkkk1lD5w=
jwt.token.user=crm-gym

spring.security.user.name=user
spring.security.user.password=secret
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

logging.level.org.springframework.security=INFO
eureka.client.service-url.defaultZone: http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

#resilience4j.circuitbreaker.instances.trainingServicet
#failure-rate-threshold: 50
#wait-duration-in-open-state: 10000ms
#sliding-window-size: 10

resilience4j.circuitbreaker.instances.trainingService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.trainingService.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.trainingService.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.trainingService.sliding-window-size=10
resilience4j.circuitbreaker.instances.trainingService.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.trainingService.permitted-number-of-calls-in-half-open-state=3

#spring.security.oauth2.client.registration.messaging-client-model.provider=client-provider
#spring.security.oauth2.client.registration.messaging-client-model.client-id=crm-gym
#spring.security.oauth2.client.registration.messaging-client-model.client-secret=nPeuwaQAK20amfWM4VorfGC48JJkEhDFW19Z0qm41ivMqAbx
#spring.security.oauth2.client.registration.messaging-client-model.authorization-grant-type=client_credentials
#spring.security.oauth2.client.registration.messaging-client-model.client-authentication-method=client_secret_post
#spring.security.oauth2.client.registration.messaging-client-model.scope=message:write
#spring.security.oauth2.client.registration.messaging-client-model.client-name=messaging-client-model
#spring.security.oauth2.client.provider.client-provider.token-uri=http://localhost:8083/oauth2/token
